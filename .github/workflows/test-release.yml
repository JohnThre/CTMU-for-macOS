name: Test Release

on:
  push:
    tags:
      - 'test-v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Test version (e.g., test-v2.1.0-alpha.1)'
        required: true
        type: string

jobs:
  test-build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel twine
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest tests/ -v

    - name: Extract version from tag
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Build Python packages
      run: |
        python -m build

    - name: Create checksums
      run: |
        cd dist
        shasum -a 256 *.whl *.tar.gz > checksums.txt

    - name: Publish to TestPyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        python -m twine upload --repository testpypi dist/*.whl dist/*.tar.gz --verbose
      continue-on-error: true

    - name: Test installation from TestPyPI
      run: |
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ ctmu
        ctmu --help
      continue-on-error: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-packages-${{ steps.get_version.outputs.version }}
        path: |
          dist/*.whl
          dist/*.tar.gz
          dist/checksums.txt
        retention-days: 7

  notify:
    needs: test-build
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Check test-build status
      run: |
        if [ "${{ needs.test-build.result }}" == "success" ]; then
          echo "✅ Test build and TestPyPI upload successful!"
          echo "Install with: pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ ctmu"
        else
          echo "❌ Test build failed. Check the logs above."
          exit 1
        fi
